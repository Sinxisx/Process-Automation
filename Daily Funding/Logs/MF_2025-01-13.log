2025-01-13 09:22:34 - INFO - Processing Start
2025-01-13 09:22:34 - INFO - Running SQL Query
2025-01-13 09:24:52 - INFO - SQL Query Finished
2025-01-13 09:24:59 - INFO - Connected (version 2.0, client 6.6.2.451)
2025-01-13 09:25:00 - INFO - Authentication (password) successful!
2025-01-13 09:25:00 - INFO - [chan 0] Opened sftp connection (server version 3)
2025-01-13 09:25:10 - INFO - File uploaded successfully to /PDA/PNR Automation/Daily Funding/MF_20250109.csv
2025-01-13 09:25:10 - INFO - [chan 0] sftp session closed.
2025-01-13 09:25:10 - INFO - Processing Finished
2025-01-13 09:49:26 - INFO - Processing Start
2025-01-13 09:49:30 - INFO - Running SQL Query
2025-01-13 09:49:30 - ERROR - Exception occurred
Traceback (most recent call last):
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
oracledb.exceptions.DatabaseError: ORA-00904: "T"."INT_EXPENSE_MTD": invalid identifier
Help: https://docs.oracle.com/error-help/db/ora-00904/

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\MR38804\AppData\Local\Temp\ipykernel_18388\1728334164.py", line 16, in <module>
    MF = pd.read_sql(sqlFile, engine)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 734, in read_sql
    return pandas_sql.read_query(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1836, in read_query
    result = self.execute(sql, params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1659, in execute
    return self.con.exec_driver_sql(sql, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1779, in exec_driver_sql
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
sqlalchemy.exc.DatabaseError: (oracledb.exceptions.DatabaseError) ORA-00904: "T"."INT_EXPENSE_MTD": invalid identifier
Help: https://docs.oracle.com/error-help/db/ora-00904/
[SQL: WITH
CURRD AS (
    SELECT DISTINCT BASE_DT,
    TO_DATE(TO_CHAR(BASE_DT),'yyyymmdd') BASE_DT_PARSED,
    SUBSTR(BASE_DT,1,6) AS BASE_YM, 
    AGREE_ID, CTRL2,FLAG, ACCT_NO, ACCT_BR,
    GCIF_CREATE_BR, REGION, AREA, BRANCH, GCIF_NO,
    CIF_NO, CUST_TYPE, PROD_NM, SUB_PROD_NM, SEGMENT,
    GCIF_NAME, PROD_TYPE, CURR_CODE, SUB_LOB_CD, RATE_DPK/100 AS RATE_DPK,
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX, 
    MTD_INT_EXP, NPK_SALES, COLT,
    STATUS,
    SYSTEM_TYPE,
    CTRL3
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING)
),
PREVD AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVD
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) 
    FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT < (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING))
),
PREVM AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVM
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT)
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{LM}')
),
PREVY AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVY
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT LIKE '{LY}')
),
MTD AS (
    SELECT 
    AGREE_ID, 
    CASE WHEN BASE_AMT_MTD<=0 THEN 0 ELSE INT_EXPENSE_MTD/BASE_AMT_MTD END AS COF_MTD FROM (
    SELECT 
    AGREE_ID,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END) BASE_AMT_MTD,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT*RATE_DPK/100 END) INT_EXPENSE_MTD
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{CM}'
    GROUP BY AGREE_ID)
),
BLOKIR AS(
    SELECT DISTINCT ACCT_NO, CTRL2, '1' AS BLOCK
    FROM PDA.MASTER_HOLD_ACCOUNT
    WHERE BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_HOLD_ACCOUNT)
),
MSTR_TBL AS (
    SELECT c.BASE_DT,c.BASE_DT_PARSED,c.BASE_YM ,c.AGREE_ID, c.FLAG, c.ACCT_NO, c.ACCT_BR,
    c.GCIF_CREATE_BR, c.REGION, c.AREA, c.BRANCH, c.GCIF_NO,
    c.CIF_NO, c.CUST_TYPE, c.PROD_NM, c.SUB_PROD_NM, c.SEGMENT,
    c.GCIF_NAME, c.PROD_TYPE, c.CURR_CODE, c.SUB_LOB_CD, c.RATE_DPK, 
    c.BASE_AMT_FIX, 
    c.MTD_INT_EXP, c.NPK_SALES, c.COLT,
    t.BASE_AMT_MTD,
    t.INT_EXPENSE_MTD,
    t.COF_MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(d.BASE_AMT_FIX_PREVD,0)) AS DTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(m.BASE_AMT_FIX_PREVM,0)) AS MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(y.BASE_AMT_FIX_PREVY,0)) AS YTD,
    CASE 
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD <= 0.015 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.015 AND t.COF_MTD <= 0.03 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.03 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD <= 0.0025 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.0025 AND t.COF_MTD <= 0.01 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.01 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        ELSE '' END AS HIGH_COF_FLAG,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 'CFS-SMER '|| chr(38) ||' MICRO'
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 'CFS-SME+'
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 'CFS-BB'
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 'GB-CORP'
    END AS SEGMENT_FIX,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 1
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 2
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 3
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 4
    END AS LOB_SORT,
    CASE 
        WHEN c.PROD_TYPE IN ('CA', 'SA') THEN 'CASA'
        WHEN c.PROD_TYPE = 'TD' THEN 'TD'
    END AS CASA_TD,
    CASE 
        WHEN (c.BASE_AMT_FIX - d.BASE_AMT_FIX_PREVD) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS DTD_10B,
    CASE 
        WHEN (c.BASE_AMT_FIX - m.BASE_AMT_FIX_PREVM) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS MTD_10B,
    CASE 
        WHEN c.SUB_LOB_CD = '01001' THEN 'LLC'
        WHEN c.SUB_LOB_CD = '01002' THEN 'FIG'
        WHEN c.SUB_LOB_CD = '01999' THEN 'SOE'
        ELSE 'UNDEFINED'
    END AS DIVISION,
    c.STATUS,
    c.SYSTEM_TYPE,
    c.CTRL3,
    b.BLOCK
    FROM CURRD c
    LEFT JOIN PREVD d ON c.AGREE_ID = d.AGREE_ID
    LEFT JOIN PREVM m ON c.AGREE_ID = m.AGREE_ID
    LEFT JOIN PREVY y ON c.AGREE_ID = y.AGREE_ID
    LEFT JOIN MTD t ON c.AGREE_ID = t.AGREE_ID
    LEFT JOIN BLOKIR b ON  c.ACCT_NO = b.ACCT_NO AND c.CTRL2=b.CTRL2
)
SELECT * FROM MSTR_TBL]
(Background on this error at: https://sqlalche.me/e/20/4xp6)
2025-01-13 09:50:57 - INFO - Processing Start
2025-01-13 09:50:57 - INFO - Running SQL Query
2025-01-13 09:51:57 - INFO - SQL Query Finished
2025-01-13 10:28:23 - INFO - Processing Start
2025-01-13 10:28:25 - INFO - Running SQL Query
2025-01-13 10:31:37 - INFO - SQL Query Finished
2025-01-13 10:43:26 - INFO - Processing Start
2025-01-13 10:43:27 - INFO - Running SQL Query
2025-01-13 10:43:27 - ERROR - Exception occurred
Traceback (most recent call last):
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
oracledb.exceptions.DatabaseError: ORA-00923: FROM keyword not found where expected
Help: https://docs.oracle.com/error-help/db/ora-00923/

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\MR38804\AppData\Local\Temp\ipykernel_11400\1728334164.py", line 16, in <module>
    MF = pd.read_sql(sqlFile, engine)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 734, in read_sql
    return pandas_sql.read_query(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1836, in read_query
    result = self.execute(sql, params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1659, in execute
    return self.con.exec_driver_sql(sql, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1779, in exec_driver_sql
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
sqlalchemy.exc.DatabaseError: (oracledb.exceptions.DatabaseError) ORA-00923: FROM keyword not found where expected
Help: https://docs.oracle.com/error-help/db/ora-00923/
[SQL: WITH
CURRD AS (
    SELECT DISTINCT BASE_DT,
    TO_DATE(TO_CHAR(BASE_DT),'yyyymmdd') BASE_DT_PARSED,
    SUBSTR(BASE_DT,1,6) AS BASE_YM, 
    AGREE_ID, CTRL2,FLAG, ACCT_NO, ACCT_BR,
    GCIF_CREATE_BR, REGION, AREA, BRANCH, GCIF_NO,
    CIF_NO, CUST_TYPE, PROD_NM, SUB_PROD_NM, SEGMENT,
    GCIF_NAME, PROD_TYPE, CURR_CODE, SUB_LOB_CD, RATE_DPK/100 AS RATE_DPK,
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX,
    CASE WHEN MTD_AVG_AMOUNT < 0 THEN 0 ELSE MTD_AVG_AMOUNT END AS MTD_AVG_AMT_FIX
    MTD_INT_EXP, NPK_SALES, COLT,
    STATUS,
    SYSTEM_TYPE,
    CTRL3
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING)
),
PREVD AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVD
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) 
    FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT < (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING))
),
PREVM AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVM
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT)
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{LM}'||'%')
),
PREVY AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVY
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT LIKE '{LY}'||'%')
),
MTD AS (
    SELECT 
    AGREE_ID, 
    CASE WHEN BASE_AMT_ACCUM_MTD<=0 THEN 0 ELSE INT_EXP_ACCUM_MTD/BASE_AMT_ACCUM_MTD END AS COF_MTD,
    BASE_AMT_ACCUM_MTD,
    INT_EXP_ACCUM_MTD
    FROM (
    SELECT 
    AGREE_ID,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END) BASE_AMT_ACCUM_MTD,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT*RATE_DPK/100 END) INT_EXP_ACCUM_MTD,
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{CM}'||'%'
    GROUP BY AGREE_ID)
),
BLOKIR AS(
    SELECT DISTINCT ACCT_NO, CTRL2, '1' AS BLOCK
    FROM PDA.MASTER_HOLD_ACCOUNT
    WHERE BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_HOLD_ACCOUNT)
),
MSTR_TBL AS (
    SELECT c.BASE_DT,c.BASE_DT_PARSED,c.BASE_YM ,c.AGREE_ID, c.FLAG, c.ACCT_NO, c.ACCT_BR,
    c.GCIF_CREATE_BR, c.REGION, c.AREA, c.BRANCH, c.GCIF_NO,
    c.CIF_NO, c.CUST_TYPE, c.PROD_NM, c.SUB_PROD_NM, c.SEGMENT,
    c.GCIF_NAME, c.PROD_TYPE, c.CURR_CODE, c.SUB_LOB_CD, c.RATE_DPK, 
    c.BASE_AMT_FIX,
    c.MTD_AVG_AMT_FIX,
    c.MTD_INT_EXP, c.NPK_SALES, c.COLT,
    t.BASE_AMT_MTD,
    t.INT_EXPENSE_MTD,
    t.COF_MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(d.BASE_AMT_FIX_PREVD,0)) AS DTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(m.BASE_AMT_FIX_PREVM,0)) AS MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(y.BASE_AMT_FIX_PREVY,0)) AS YTD,
    CASE 
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD <= 0.015 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.015 AND t.COF_MTD <= 0.03 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.03 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD <= 0.0025 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.0025 AND t.COF_MTD <= 0.01 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.01 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        ELSE '' END AS HIGH_COF_FLAG,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 'CFS-SMER '|| chr(38) ||' MICRO'
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 'CFS-SME+'
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 'CFS-BB'
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 'GB-CORP'
    END AS SEGMENT_FIX,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 1
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 2
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 3
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 4
    END AS LOB_SORT,
    CASE 
        WHEN c.PROD_TYPE IN ('CA', 'SA') THEN 'CASA'
        WHEN c.PROD_TYPE = 'TD' THEN 'TD'
    END AS CASA_TD,
    CASE 
        WHEN (c.BASE_AMT_FIX - d.BASE_AMT_FIX_PREVD) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS DTD_10B,
    CASE 
        WHEN (c.BASE_AMT_FIX - m.BASE_AMT_FIX_PREVM) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS MTD_10B,
    CASE 
        WHEN c.SUB_LOB_CD = '01001' THEN 'LLC'
        WHEN c.SUB_LOB_CD = '01002' THEN 'FIG'
        WHEN c.SUB_LOB_CD = '01999' THEN 'SOE'
        ELSE 'UNDEFINED'
    END AS DIVISION,
    c.STATUS,
    c.SYSTEM_TYPE,
    c.CTRL3,
    b.BLOCK
    FROM CURRD c
    LEFT JOIN PREVD d ON c.AGREE_ID = d.AGREE_ID
    LEFT JOIN PREVM m ON c.AGREE_ID = m.AGREE_ID
    LEFT JOIN PREVY y ON c.AGREE_ID = y.AGREE_ID
    LEFT JOIN MTD t ON c.AGREE_ID = t.AGREE_ID
    LEFT JOIN BLOKIR b ON  c.ACCT_NO = b.ACCT_NO AND c.CTRL2=b.CTRL2
)
SELECT * FROM MSTR_TBL]
(Background on this error at: https://sqlalche.me/e/20/4xp6)
2025-01-13 10:44:01 - INFO - Processing Start
2025-01-13 10:44:02 - INFO - Running SQL Query
2025-01-13 10:44:02 - ERROR - Exception occurred
Traceback (most recent call last):
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
oracledb.exceptions.DatabaseError: ORA-00923: FROM keyword not found where expected
Help: https://docs.oracle.com/error-help/db/ora-00923/

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\MR38804\AppData\Local\Temp\ipykernel_1944\1728334164.py", line 16, in <module>
    MF = pd.read_sql(sqlFile, engine)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 734, in read_sql
    return pandas_sql.read_query(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1836, in read_query
    result = self.execute(sql, params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1659, in execute
    return self.con.exec_driver_sql(sql, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1779, in exec_driver_sql
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
sqlalchemy.exc.DatabaseError: (oracledb.exceptions.DatabaseError) ORA-00923: FROM keyword not found where expected
Help: https://docs.oracle.com/error-help/db/ora-00923/
[SQL: WITH
CURRD AS (
    SELECT DISTINCT BASE_DT,
    TO_DATE(TO_CHAR(BASE_DT),'yyyymmdd') BASE_DT_PARSED,
    SUBSTR(BASE_DT,1,6) AS BASE_YM, 
    AGREE_ID, CTRL2,FLAG, ACCT_NO, ACCT_BR,
    GCIF_CREATE_BR, REGION, AREA, BRANCH, GCIF_NO,
    CIF_NO, CUST_TYPE, PROD_NM, SUB_PROD_NM, SEGMENT,
    GCIF_NAME, PROD_TYPE, CURR_CODE, SUB_LOB_CD, RATE_DPK/100 AS RATE_DPK,
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX,
    CASE WHEN MTD_AVG_AMOUNT < 0 THEN 0 ELSE MTD_AVG_AMOUNT END AS MTD_AVG_AMT_FIX
    MTD_INT_EXP, NPK_SALES, COLT,
    STATUS,
    SYSTEM_TYPE,
    CTRL3
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING)
),
PREVD AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVD
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) 
    FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT < (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING))
),
PREVM AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVM
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT)
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{LM}'||'%')
),
PREVY AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVY
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT LIKE '{LY}'||'%')
),
MTD AS (
    SELECT 
    AGREE_ID, 
    CASE WHEN BASE_AMT_ACCUM_MTD<=0 THEN 0 ELSE INT_EXP_ACCUM_MTD/BASE_AMT_ACCUM_MTD END AS COF_MTD,
    BASE_AMT_ACCUM_MTD,
    INT_EXP_ACCUM_MTD
    FROM (
    SELECT 
    AGREE_ID,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END) BASE_AMT_ACCUM_MTD,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT*RATE_DPK/100 END) INT_EXP_ACCUM_MTD
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{CM}'||'%'
    GROUP BY AGREE_ID)
),
BLOKIR AS(
    SELECT DISTINCT ACCT_NO, CTRL2, '1' AS BLOCK
    FROM PDA.MASTER_HOLD_ACCOUNT
    WHERE BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_HOLD_ACCOUNT)
),
MSTR_TBL AS (
    SELECT c.BASE_DT,c.BASE_DT_PARSED,c.BASE_YM ,c.AGREE_ID, c.FLAG, c.ACCT_NO, c.ACCT_BR,
    c.GCIF_CREATE_BR, c.REGION, c.AREA, c.BRANCH, c.GCIF_NO,
    c.CIF_NO, c.CUST_TYPE, c.PROD_NM, c.SUB_PROD_NM, c.SEGMENT,
    c.GCIF_NAME, c.PROD_TYPE, c.CURR_CODE, c.SUB_LOB_CD, c.RATE_DPK, 
    c.BASE_AMT_FIX,
    c.MTD_AVG_AMT_FIX,
    c.MTD_INT_EXP, c.NPK_SALES, c.COLT,
    t.BASE_AMT_MTD,
    t.INT_EXPENSE_MTD,
    t.COF_MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(d.BASE_AMT_FIX_PREVD,0)) AS DTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(m.BASE_AMT_FIX_PREVM,0)) AS MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(y.BASE_AMT_FIX_PREVY,0)) AS YTD,
    CASE 
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD <= 0.015 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.015 AND t.COF_MTD <= 0.03 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.03 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD <= 0.0025 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.0025 AND t.COF_MTD <= 0.01 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.01 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        ELSE '' END AS HIGH_COF_FLAG,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 'CFS-SMER '|| chr(38) ||' MICRO'
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 'CFS-SME+'
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 'CFS-BB'
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 'GB-CORP'
    END AS SEGMENT_FIX,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 1
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 2
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 3
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 4
    END AS LOB_SORT,
    CASE 
        WHEN c.PROD_TYPE IN ('CA', 'SA') THEN 'CASA'
        WHEN c.PROD_TYPE = 'TD' THEN 'TD'
    END AS CASA_TD,
    CASE 
        WHEN (c.BASE_AMT_FIX - d.BASE_AMT_FIX_PREVD) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS DTD_10B,
    CASE 
        WHEN (c.BASE_AMT_FIX - m.BASE_AMT_FIX_PREVM) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS MTD_10B,
    CASE 
        WHEN c.SUB_LOB_CD = '01001' THEN 'LLC'
        WHEN c.SUB_LOB_CD = '01002' THEN 'FIG'
        WHEN c.SUB_LOB_CD = '01999' THEN 'SOE'
        ELSE 'UNDEFINED'
    END AS DIVISION,
    c.STATUS,
    c.SYSTEM_TYPE,
    c.CTRL3,
    b.BLOCK
    FROM CURRD c
    LEFT JOIN PREVD d ON c.AGREE_ID = d.AGREE_ID
    LEFT JOIN PREVM m ON c.AGREE_ID = m.AGREE_ID
    LEFT JOIN PREVY y ON c.AGREE_ID = y.AGREE_ID
    LEFT JOIN MTD t ON c.AGREE_ID = t.AGREE_ID
    LEFT JOIN BLOKIR b ON  c.ACCT_NO = b.ACCT_NO AND c.CTRL2=b.CTRL2
)
SELECT * FROM MSTR_TBL]
(Background on this error at: https://sqlalche.me/e/20/4xp6)
2025-01-13 10:45:05 - INFO - Processing Start
2025-01-13 10:45:05 - INFO - Running SQL Query
2025-01-13 10:45:05 - ERROR - Exception occurred
Traceback (most recent call last):
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
oracledb.exceptions.DatabaseError: ORA-00904: "T"."INT_EXPENSE_MTD": invalid identifier
Help: https://docs.oracle.com/error-help/db/ora-00904/

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\MR38804\AppData\Local\Temp\ipykernel_17540\1728334164.py", line 16, in <module>
    MF = pd.read_sql(sqlFile, engine)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 734, in read_sql
    return pandas_sql.read_query(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1836, in read_query
    result = self.execute(sql, params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1659, in execute
    return self.con.exec_driver_sql(sql, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1779, in exec_driver_sql
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
sqlalchemy.exc.DatabaseError: (oracledb.exceptions.DatabaseError) ORA-00904: "T"."INT_EXPENSE_MTD": invalid identifier
Help: https://docs.oracle.com/error-help/db/ora-00904/
[SQL: WITH
CURRD AS (
    SELECT DISTINCT BASE_DT,
    TO_DATE(TO_CHAR(BASE_DT),'yyyymmdd') BASE_DT_PARSED,
    SUBSTR(BASE_DT,1,6) AS BASE_YM, 
    AGREE_ID, CTRL2,FLAG, ACCT_NO, ACCT_BR,
    GCIF_CREATE_BR, REGION, AREA, BRANCH, GCIF_NO,
    CIF_NO, CUST_TYPE, PROD_NM, SUB_PROD_NM, SEGMENT,
    GCIF_NAME, PROD_TYPE, CURR_CODE, SUB_LOB_CD, RATE_DPK/100 AS RATE_DPK,
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX,
    CASE WHEN MTD_AVG_AMOUNT < 0 THEN 0 ELSE MTD_AVG_AMOUNT END AS MTD_AVG_AMT_FIX,
    MTD_INT_EXP, NPK_SALES, COLT,
    STATUS,
    SYSTEM_TYPE,
    CTRL3
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING)
),
PREVD AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVD
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) 
    FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT < (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING))
),
PREVM AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVM
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT)
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{LM}'||'%')
),
PREVY AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVY
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT LIKE '{LY}'||'%')
),
MTD AS (
    SELECT 
    AGREE_ID, 
    CASE WHEN BASE_AMT_ACCUM_MTD<=0 THEN 0 ELSE INT_EXP_ACCUM_MTD/BASE_AMT_ACCUM_MTD END AS COF_MTD,
    BASE_AMT_ACCUM_MTD,
    INT_EXP_ACCUM_MTD
    FROM (
    SELECT 
    AGREE_ID,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END) BASE_AMT_ACCUM_MTD,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT*RATE_DPK/100 END) INT_EXP_ACCUM_MTD
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{CM}'||'%'
    GROUP BY AGREE_ID)
),
BLOKIR AS(
    SELECT DISTINCT ACCT_NO, CTRL2, '1' AS BLOCK
    FROM PDA.MASTER_HOLD_ACCOUNT
    WHERE BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_HOLD_ACCOUNT)
),
MSTR_TBL AS (
    SELECT c.BASE_DT,c.BASE_DT_PARSED,c.BASE_YM ,c.AGREE_ID, c.FLAG, c.ACCT_NO, c.ACCT_BR,
    c.GCIF_CREATE_BR, c.REGION, c.AREA, c.BRANCH, c.GCIF_NO,
    c.CIF_NO, c.CUST_TYPE, c.PROD_NM, c.SUB_PROD_NM, c.SEGMENT,
    c.GCIF_NAME, c.PROD_TYPE, c.CURR_CODE, c.SUB_LOB_CD, c.RATE_DPK, 
    c.BASE_AMT_FIX,
    c.MTD_AVG_AMT_FIX,
    c.MTD_INT_EXP, c.NPK_SALES, c.COLT,
    t.BASE_AMT_MTD,
    t.INT_EXPENSE_MTD,
    t.COF_MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(d.BASE_AMT_FIX_PREVD,0)) AS DTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(m.BASE_AMT_FIX_PREVM,0)) AS MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(y.BASE_AMT_FIX_PREVY,0)) AS YTD,
    CASE 
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD <= 0.015 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.015 AND t.COF_MTD <= 0.03 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.03 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD <= 0.0025 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.0025 AND t.COF_MTD <= 0.01 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.01 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        ELSE '' END AS HIGH_COF_FLAG,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 'CFS-SMER '|| chr(38) ||' MICRO'
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 'CFS-SME+'
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 'CFS-BB'
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 'GB-CORP'
    END AS SEGMENT_FIX,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 1
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 2
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 3
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 4
    END AS LOB_SORT,
    CASE 
        WHEN c.PROD_TYPE IN ('CA', 'SA') THEN 'CASA'
        WHEN c.PROD_TYPE = 'TD' THEN 'TD'
    END AS CASA_TD,
    CASE 
        WHEN (c.BASE_AMT_FIX - d.BASE_AMT_FIX_PREVD) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS DTD_10B,
    CASE 
        WHEN (c.BASE_AMT_FIX - m.BASE_AMT_FIX_PREVM) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS MTD_10B,
    CASE 
        WHEN c.SUB_LOB_CD = '01001' THEN 'LLC'
        WHEN c.SUB_LOB_CD = '01002' THEN 'FIG'
        WHEN c.SUB_LOB_CD = '01999' THEN 'SOE'
        ELSE 'UNDEFINED'
    END AS DIVISION,
    c.STATUS,
    c.SYSTEM_TYPE,
    c.CTRL3,
    b.BLOCK
    FROM CURRD c
    LEFT JOIN PREVD d ON c.AGREE_ID = d.AGREE_ID
    LEFT JOIN PREVM m ON c.AGREE_ID = m.AGREE_ID
    LEFT JOIN PREVY y ON c.AGREE_ID = y.AGREE_ID
    LEFT JOIN MTD t ON c.AGREE_ID = t.AGREE_ID
    LEFT JOIN BLOKIR b ON  c.ACCT_NO = b.ACCT_NO AND c.CTRL2=b.CTRL2
)
SELECT * FROM MSTR_TBL]
(Background on this error at: https://sqlalche.me/e/20/4xp6)
2025-01-13 10:46:46 - INFO - Processing Start
2025-01-13 10:46:47 - INFO - Running SQL Query
2025-01-13 10:47:18 - INFO - SQL Query Finished
2025-01-13 11:07:49 - INFO - Processing Start
2025-01-13 11:07:49 - INFO - Running SQL Query
2025-01-13 11:08:24 - INFO - SQL Query Finished
2025-01-13 11:17:51 - INFO - Processing Start
2025-01-13 11:17:53 - INFO - Running SQL Query
2025-01-13 11:18:24 - INFO - SQL Query Finished
2025-01-13 11:25:07 - INFO - Running SQL Query
2025-01-13 11:25:07 - ERROR - Exception occurred
Traceback (most recent call last):
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
oracledb.exceptions.DatabaseError: ORA-00900: invalid SQL statement
Help: https://docs.oracle.com/error-help/db/ora-00900/

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\MR38804\AppData\Local\Temp\ipykernel_7760\3295453273.py", line 16, in <module>
    MFMtd = pd.read_sql(sqlFile, engine)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 734, in read_sql
    return pandas_sql.read_query(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1836, in read_query
    result = self.execute(sql, params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1659, in execute
    return self.con.exec_driver_sql(sql, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1779, in exec_driver_sql
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
sqlalchemy.exc.DatabaseError: (oracledb.exceptions.DatabaseError) ORA-00900: invalid SQL statement
Help: https://docs.oracle.com/error-help/db/ora-00900/
[SQL: MTD_ACCUM AS(
    SELECT 
    AGREE_ID,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END) BASE_AMT_ACCUM_MTD,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT*RATE_DPK/100 END) INT_EXP_ACCUM_MTD
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{CM}'||'%'
    GROUP BY AGREE_ID
),
MTD AS (
    SELECT 
    AGREE_ID, 
    CASE WHEN BASE_AMT_ACCUM_MTD<=0 THEN 0 ELSE INT_EXP_ACCUM_MTD/BASE_AMT_ACCUM_MTD END AS COF_MTD,
    BASE_AMT_ACCUM_MTD,
    INT_EXP_ACCUM_MTD
    FROM MTD_ACCUM
)
SELECT * FROM MTD]
(Background on this error at: https://sqlalche.me/e/20/4xp6)
2025-01-13 11:25:36 - INFO - Running SQL Query
2025-01-13 11:25:36 - INFO - SQL Query Finished
2025-01-13 11:27:15 - INFO - Running SQL Query
2025-01-13 11:27:15 - INFO - SQL Query Finished
2025-01-13 11:27:42 - INFO - Running SQL Query
2025-01-13 11:33:27 - INFO - Processing Start
2025-01-13 11:33:28 - INFO - Running SQL Query
2025-01-13 11:33:28 - ERROR - Exception occurred
Traceback (most recent call last):
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
oracledb.exceptions.DatabaseError: ORA-00936: missing expression
Help: https://docs.oracle.com/error-help/db/ora-00936/

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\MR38804\AppData\Local\Temp\ipykernel_17480\1728334164.py", line 16, in <module>
    MF = pd.read_sql(sqlFile, engine)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 734, in read_sql
    return pandas_sql.read_query(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1836, in read_query
    result = self.execute(sql, params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1659, in execute
    return self.con.exec_driver_sql(sql, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1779, in exec_driver_sql
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
sqlalchemy.exc.DatabaseError: (oracledb.exceptions.DatabaseError) ORA-00936: missing expression
Help: https://docs.oracle.com/error-help/db/ora-00936/
[SQL: WITH
CURRD AS (
    SELECT DISTINCT BASE_DT,
    TO_DATE(TO_CHAR(BASE_DT),'yyyymmdd') BASE_DT_PARSED,
    SUBSTR(BASE_DT,1,6) AS BASE_YM, 
    AGREE_ID, CTRL2,FLAG, ACCT_NO, ACCT_BR,
    GCIF_CREATE_BR, REGION, AREA, BRANCH, GCIF_NO,
    CIF_NO, CUST_TYPE, PROD_NM, SUB_PROD_NM, SEGMENT,
    GCIF_NAME, PROD_TYPE, CURR_CODE, SUB_LOB_CD, RATE_DPK/100 AS RATE_DPK,
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX,
    CASE WHEN MTD_AVG_AMOUNT < 0 THEN 0 ELSE MTD_AVG_AMOUNT END AS MTD_AVG_AMT_FIX,
    MTD_INT_EXP, NPK_SALES, COLT,
    STATUS,
    SYSTEM_TYPE,
    CTRL3
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING)
),
PREVD AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVD
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) 
    FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT < (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING))
),
PREVM AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVM
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT)
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{LM}'||'%')
),
PREVY AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVY
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT LIKE '{LY}'||'%')
),
MTD_ACCUM AS(
    SELECT 
    AGREE_ID,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END) BASE_AMT_ACCUM_MTD,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT*RATE_DPK/100 END) INT_EXP_ACCUM_MTD
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE LIKE (SELECT SUBSTR(MAX(BASE_DT),1,6)||'%' FROM CURRD)
    AND GCIF_NO IN (SELECT DISTINCT GCIF_NO FROM CURRD)
    GROUP BY AGREE_ID
),
MTD AS (
    SELECT 
    AGREE_ID, 
    CASE WHEN BASE_AMT_ACCUM_MTD<=0 THEN 0 ELSE INT_EXP_ACCUM_MTD/BASE_AMT_ACCUM_MTD END AS COF_MTD,
    BASE_AMT_ACCUM_MTD,
    INT_EXP_ACCUM_MTD
    FROM MTD_ACCUM
),
BLOKIR AS(
    SELECT DISTINCT ACCT_NO, CTRL2, '1' AS BLOCK
    FROM PDA.MASTER_HOLD_ACCOUNT
    WHERE BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_HOLD_ACCOUNT)
),
MSTR_TBL AS (
    SELECT c.BASE_DT,c.BASE_DT_PARSED,c.BASE_YM ,c.AGREE_ID, c.FLAG, c.ACCT_NO, c.ACCT_BR,
    c.GCIF_CREATE_BR, c.REGION, c.AREA, c.BRANCH, c.GCIF_NO,
    c.CIF_NO, c.CUST_TYPE, c.PROD_NM, c.SUB_PROD_NM, c.SEGMENT,
    c.GCIF_NAME, c.PROD_TYPE, c.CURR_CODE, c.SUB_LOB_CD, c.RATE_DPK, 
    c.BASE_AMT_FIX,
    c.MTD_AVG_AMT_FIX,
    c.MTD_INT_EXP, c.NPK_SALES, c.COLT,
    t.BASE_AMT_ACCUM_MTD,
    t.INT_EXP_ACCUM_MTD,
    t.COF_MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(d.BASE_AMT_FIX_PREVD,0)) AS DTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(m.BASE_AMT_FIX_PREVM,0)) AS MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(y.BASE_AMT_FIX_PREVY,0)) AS YTD,
    CASE 
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD <= 0.015 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.015 AND t.COF_MTD <= 0.03 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.03 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD <= 0.0025 AND c.COLT != 1 THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.0025 AND t.COF_MTD <= 0.01 AND c.COLT != 1 THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.01 AND c.COLT != 1 THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        ELSE '' END AS HIGH_COF_FLAG,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 'CFS-SMER '|| chr(38) ||' MICRO'
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 'CFS-SME+'
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 'CFS-BB'
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 'GB-CORP'
    END AS SEGMENT_FIX,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 1
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 2
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 3
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 4
    END AS LOB_SORT,
    CASE 
        WHEN c.PROD_TYPE IN ('CA', 'SA') THEN 'CASA'
        WHEN c.PROD_TYPE = 'TD' THEN 'TD'
    END AS CASA_TD,
    CASE 
        WHEN (c.BASE_AMT_FIX - d.BASE_AMT_FIX_PREVD) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS DTD_10B,
    CASE 
        WHEN (c.BASE_AMT_FIX - m.BASE_AMT_FIX_PREVM) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS MTD_10B,
    CASE 
        WHEN c.SUB_LOB_CD = '01001' THEN 'LLC'
        WHEN c.SUB_LOB_CD = '01002' THEN 'FIG'
        WHEN c.SUB_LOB_CD = '01999' THEN 'SOE'
        ELSE 'UNDEFINED'
    END AS DIVISION,
    c.STATUS,
    c.SYSTEM_TYPE,
    c.CTRL3,
    b.BLOCK
    FROM CURRD c
    LEFT JOIN PREVD d ON c.AGREE_ID = d.AGREE_ID
    LEFT JOIN PREVM m ON c.AGREE_ID = m.AGREE_ID
    LEFT JOIN PREVY y ON c.AGREE_ID = y.AGREE_ID
    LEFT JOIN MTD t ON c.AGREE_ID = t.AGREE_ID
    LEFT JOIN BLOKIR b ON  c.ACCT_NO = b.ACCT_NO AND c.CTRL2=b.CTRL2
)
SELECT * FROM MSTR_TBL]
(Background on this error at: https://sqlalche.me/e/20/4xp6)
2025-01-13 11:34:22 - INFO - Processing Start
2025-01-13 11:34:23 - INFO - Running SQL Query
2025-01-13 11:43:14 - INFO - SQL Query Finished
2025-01-13 13:34:27 - INFO - Processing Start
2025-01-13 13:34:28 - INFO - Running SQL Query
2025-01-13 13:34:28 - ERROR - Exception occurred
Traceback (most recent call last):
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
oracledb.exceptions.DatabaseError: ORA-00905: missing keyword
Help: https://docs.oracle.com/error-help/db/ora-00905/

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\MR38804\AppData\Local\Temp\ipykernel_17492\1728334164.py", line 16, in <module>
    MF = pd.read_sql(sqlFile, engine)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 734, in read_sql
    return pandas_sql.read_query(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1836, in read_query
    result = self.execute(sql, params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1659, in execute
    return self.con.exec_driver_sql(sql, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1779, in exec_driver_sql
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
sqlalchemy.exc.DatabaseError: (oracledb.exceptions.DatabaseError) ORA-00905: missing keyword
Help: https://docs.oracle.com/error-help/db/ora-00905/
[SQL: WITH
CURRD AS (
    SELECT DISTINCT BASE_DT,
    TO_DATE(TO_CHAR(BASE_DT),'yyyymmdd') BASE_DT_PARSED,
    SUBSTR(BASE_DT,1,6) AS BASE_YM, 
    AGREE_ID, CTRL2,FLAG, ACCT_NO, ACCT_BR,
    GCIF_CREATE_BR, REGION, AREA, BRANCH, GCIF_NO,
    CIF_NO, CUST_TYPE, PROD_NM, SUB_PROD_NM, SEGMENT,
    GCIF_NAME, PROD_TYPE, CURR_CODE, SUB_LOB_CD, RATE_DPK/100 AS RATE_DPK,
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX,
    CASE WHEN MTD_AVG_AMOUNT < 0 THEN 0 ELSE MTD_AVG_AMOUNT END AS MTD_AVG_AMT_FIX,
    MTD_INT_EXP, NPK_SALES, COLT,
    STATUS,
    SYSTEM_TYPE,
    CTRL3
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING)
),
PREVD AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVD
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) 
    FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT < (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING))
),
PREVM AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVM
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT)
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{LM}'||'%')
),
PREVY AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVY
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT LIKE '{LY}'||'%')
),
MTD_ACCUM AS(
    SELECT 
    AGREE_ID,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END) BASE_AMT_ACCUM_MTD,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT*RATE_DPK/100 END) INT_EXP_ACCUM_MTD
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE (SELECT SUBSTR(MAX(BASE_DT),1,6)||'%' FROM CURRD)
    AND GCIF_NO IN (SELECT DISTINCT GCIF_NO FROM CURRD)
    GROUP BY AGREE_ID
),
MTD AS (
    SELECT 
    AGREE_ID, 
    CASE WHEN BASE_AMT_ACCUM_MTD<=0 THEN 0 ELSE INT_EXP_ACCUM_MTD/BASE_AMT_ACCUM_MTD END AS COF_MTD,
    BASE_AMT_ACCUM_MTD,
    INT_EXP_ACCUM_MTD
    FROM MTD_ACCUM
),
BLOKIR AS(
    SELECT DISTINCT ACCT_NO, CTRL2, '1' AS BLOCK
    FROM PDA.MASTER_HOLD_ACCOUNT
    WHERE BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_HOLD_ACCOUNT)
),
MSTR_TBL AS (
    SELECT c.BASE_DT,c.BASE_DT_PARSED,c.BASE_YM ,c.AGREE_ID, c.FLAG, c.ACCT_NO, c.ACCT_BR,
    c.GCIF_CREATE_BR, c.REGION, c.AREA, c.BRANCH, c.GCIF_NO,
    c.CIF_NO, c.CUST_TYPE, c.PROD_NM, c.SUB_PROD_NM, c.SEGMENT,
    c.GCIF_NAME, c.PROD_TYPE, c.CURR_CODE, c.SUB_LOB_CD, c.RATE_DPK, 
    c.BASE_AMT_FIX,
    c.MTD_AVG_AMT_FIX,
    c.MTD_INT_EXP, c.NPK_SALES, c.COLT,
    t.BASE_AMT_ACCUM_MTD,
    t.INT_EXP_ACCUM_MTD,
    t.COF_MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(d.BASE_AMT_FIX_PREVD,0)) AS DTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(m.BASE_AMT_FIX_PREVM,0)) AS MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(y.BASE_AMT_FIX_PREVY,0)) AS YTD,
    CASE 
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD <= 0.015 AND c.COLT IS NULL THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.015 AND t.COF_MTD <= 0.03 AND c.COLT IS NULL THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.03 AND c.COLT IS NULL; THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD <= 0.0025 AND c.COLT IS NULL THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.0025 AND t.COF_MTD <= 0.01 AND c.COLT IS NULL THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.01 AND IS NULL THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        ELSE '' END AS HIGH_COF_FLAG,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 'CFS-SMER '|| chr(38) ||' MICRO'
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 'CFS-SME+'
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 'CFS-BB'
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 'GB-CORP'
    END AS SEGMENT_FIX,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 1
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 2
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 3
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 4
    END AS LOB_SORT,
    CASE 
        WHEN c.PROD_TYPE IN ('CA', 'SA') THEN 'CASA'
        WHEN c.PROD_TYPE = 'TD' THEN 'TD'
    END AS CASA_TD,
    CASE 
        WHEN (c.BASE_AMT_FIX - d.BASE_AMT_FIX_PREVD) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS DTD_10B,
    CASE 
        WHEN (c.BASE_AMT_FIX - m.BASE_AMT_FIX_PREVM) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS MTD_10B,
    CASE 
        WHEN c.SUB_LOB_CD = '01001' THEN 'LLC'
        WHEN c.SUB_LOB_CD = '01002' THEN 'FIG'
        WHEN c.SUB_LOB_CD = '01999' THEN 'SOE'
        ELSE 'UNDEFINED'
    END AS DIVISION,
    c.STATUS,
    c.SYSTEM_TYPE,
    c.CTRL3,
    b.BLOCK
    FROM CURRD c
    LEFT JOIN PREVD d ON c.AGREE_ID = d.AGREE_ID
    LEFT JOIN PREVM m ON c.AGREE_ID = m.AGREE_ID
    LEFT JOIN PREVY y ON c.AGREE_ID = y.AGREE_ID
    LEFT JOIN MTD t ON c.AGREE_ID = t.AGREE_ID
    LEFT JOIN BLOKIR b ON  c.ACCT_NO = b.ACCT_NO AND c.CTRL2=b.CTRL2
)
SELECT * FROM MSTR_TBL]
(Background on this error at: https://sqlalche.me/e/20/4xp6)
2025-01-13 13:56:43 - INFO - Processing Start
2025-01-13 13:56:43 - INFO - Running SQL Query
2025-01-13 13:56:43 - ERROR - Exception occurred
Traceback (most recent call last):
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
oracledb.exceptions.DatabaseError: ORA-00936: missing expression
Help: https://docs.oracle.com/error-help/db/ora-00936/

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\MR38804\AppData\Local\Temp\ipykernel_13012\1728334164.py", line 16, in <module>
    MF = pd.read_sql(sqlFile, engine)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 734, in read_sql
    return pandas_sql.read_query(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1836, in read_query
    result = self.execute(sql, params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\pandas\io\sql.py", line 1659, in execute
    return self.con.exec_driver_sql(sql, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1779, in exec_driver_sql
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
  File "c:\Users\MR38804\AppData\Local\anaconda3\envs\Py64\Lib\site-packages\oracledb\cursor.py", line 701, in execute
    impl.execute(self)
  File "src\\oracledb\\impl/thin/cursor.pyx", line 178, in oracledb.thin_impl.ThinCursorImpl.execute
  File "src\\oracledb\\impl/thin/protocol.pyx", line 437, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 438, in oracledb.thin_impl.Protocol._process_single_message
  File "src\\oracledb\\impl/thin/protocol.pyx", line 431, in oracledb.thin_impl.Protocol._process_message
sqlalchemy.exc.DatabaseError: (oracledb.exceptions.DatabaseError) ORA-00936: missing expression
Help: https://docs.oracle.com/error-help/db/ora-00936/
[SQL: WITH
CURRD AS (
    SELECT DISTINCT BASE_DT,
    TO_DATE(TO_CHAR(BASE_DT),'yyyymmdd') BASE_DT_PARSED,
    SUBSTR(BASE_DT,1,6) AS BASE_YM, 
    AGREE_ID, CTRL2,FLAG, ACCT_NO, ACCT_BR,
    GCIF_CREATE_BR, REGION, AREA, BRANCH, GCIF_NO,
    CIF_NO, CUST_TYPE, PROD_NM, SUB_PROD_NM, SEGMENT,
    GCIF_NAME, PROD_TYPE, CURR_CODE, SUB_LOB_CD, RATE_DPK/100 AS RATE_DPK,
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX,
    CASE WHEN MTD_AVG_AMOUNT < 0 THEN 0 ELSE MTD_AVG_AMOUNT END AS MTD_AVG_AMT_FIX,
    MTD_INT_EXP, NPK_SALES, COLT,
    STATUS,
    SYSTEM_TYPE,
    CTRL3
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING)
),
PREVD AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVD
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) 
    FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT < (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING))
),
PREVM AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVM
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT)
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE '{LM}'||'%')
),
PREVY AS (
    SELECT DISTINCT AGREE_ID, CURR_CODE, 
    CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END AS BASE_AMT_FIX_PREVY
    FROM PDA.MASTER_FUNDING
    WHERE SEGMENT NOT LIKE 'CFS-RB%'
    AND BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_FUNDING 
    WHERE BASE_DT LIKE '{LY}'||'%')
),
MTD_ACCUM AS(
    SELECT 
    AGREE_ID,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT END) BASE_AMT_ACCUM_MTD,
    SUM(CASE WHEN BASE_AMOUNT < 0 THEN 0 ELSE BASE_AMOUNT*RATE_DPK/100 END) INT_EXP_ACCUM_MTD
    FROM PDA.MASTER_FUNDING
    WHERE BASE_DT LIKE (SELECT SUBSTR(MAX(BASE_DT),1,6)||'%' FROM CURRD)
    AND GCIF_NO IN (SELECT DISTINCT GCIF_NO FROM CURRD)
    GROUP BY AGREE_ID
),
MTD AS (
    SELECT 
    AGREE_ID, 
    CASE WHEN BASE_AMT_ACCUM_MTD<=0 THEN 0 ELSE INT_EXP_ACCUM_MTD/BASE_AMT_ACCUM_MTD END AS COF_MTD,
    BASE_AMT_ACCUM_MTD,
    INT_EXP_ACCUM_MTD
    FROM MTD_ACCUM
),
BLOKIR AS(
    SELECT DISTINCT ACCT_NO, CTRL2, '1' AS BLOCK
    FROM PDA.MASTER_HOLD_ACCOUNT
    WHERE BASE_DT = (SELECT MAX(BASE_DT) FROM PDA.MASTER_HOLD_ACCOUNT)
),
MSTR_TBL AS (
    SELECT c.BASE_DT,c.BASE_DT_PARSED,c.BASE_YM ,c.AGREE_ID, c.FLAG, c.ACCT_NO, c.ACCT_BR,
    c.GCIF_CREATE_BR, c.REGION, c.AREA, c.BRANCH, c.GCIF_NO,
    c.CIF_NO, c.CUST_TYPE, c.PROD_NM, c.SUB_PROD_NM, c.SEGMENT,
    c.GCIF_NAME, c.PROD_TYPE, c.CURR_CODE, c.SUB_LOB_CD, c.RATE_DPK, 
    c.BASE_AMT_FIX,
    c.MTD_AVG_AMT_FIX,
    c.MTD_INT_EXP, c.NPK_SALES, c.COLT,
    t.BASE_AMT_ACCUM_MTD,
    t.INT_EXP_ACCUM_MTD,
    t.COF_MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(d.BASE_AMT_FIX_PREVD,0)) AS DTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(m.BASE_AMT_FIX_PREVM,0)) AS MTD,
    (NVL(c.BASE_AMT_FIX,0) - NVL(y.BASE_AMT_FIX_PREVY,0)) AS YTD,
    CASE 
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD <= 0.015 AND c.COLT IS NULL THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.015 AND t.COF_MTD <= 0.03 AND c.COLT IS NULL THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'IDR' AND t.COF_MTD > 0.03 AND c.COLT IS NULL THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD <= 0.0025 AND c.COLT IS NULL THEN 'NORMAL COF (IDR ≤1.5%'|| chr(38) ||'USD ≤0.25%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.0025 AND t.COF_MTD <= 0.01 AND c.COLT IS NULL THEN 'MEDIUM COF (IDR 1.5-3.0%'|| chr(38) ||'USD 0.25-1.00%)'
        WHEN c.PROD_TYPE = 'CA' AND c.CURR_CODE = 'USD' AND t.COF_MTD > 0.01 AND IS NULL THEN 'HIGH COF (IDR >3.0%'|| chr(38) ||'USD >1.0%)'
        ELSE '' END AS HIGH_COF_FLAG,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 'CFS-SMER '|| chr(38) ||' MICRO'
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 'CFS-SME+'
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 'CFS-BB'
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 'GB-CORP'
    END AS SEGMENT_FIX,
    CASE 
        WHEN c.SEGMENT IN ('CFS-NONRB-MICRO', 'CFS-NONRB-RSME') THEN 1
        WHEN c.SEGMENT = 'CFS-NONRB-SME+' THEN 2
        WHEN c.SEGMENT = 'CFS-NONRB-BB' THEN 3
        WHEN c.SEGMENT = 'XXX-GB-CORP' THEN 4
    END AS LOB_SORT,
    CASE 
        WHEN c.PROD_TYPE IN ('CA', 'SA') THEN 'CASA'
        WHEN c.PROD_TYPE = 'TD' THEN 'TD'
    END AS CASA_TD,
    CASE 
        WHEN (c.BASE_AMT_FIX - d.BASE_AMT_FIX_PREVD) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS DTD_10B,
    CASE 
        WHEN (c.BASE_AMT_FIX - m.BASE_AMT_FIX_PREVM) < -10000000000 THEN 'YES'
        ELSE 'NO'
    END AS MTD_10B,
    CASE 
        WHEN c.SUB_LOB_CD = '01001' THEN 'LLC'
        WHEN c.SUB_LOB_CD = '01002' THEN 'FIG'
        WHEN c.SUB_LOB_CD = '01999' THEN 'SOE'
        ELSE 'UNDEFINED'
    END AS DIVISION,
    c.STATUS,
    c.SYSTEM_TYPE,
    c.CTRL3,
    b.BLOCK
    FROM CURRD c
    LEFT JOIN PREVD d ON c.AGREE_ID = d.AGREE_ID
    LEFT JOIN PREVM m ON c.AGREE_ID = m.AGREE_ID
    LEFT JOIN PREVY y ON c.AGREE_ID = y.AGREE_ID
    LEFT JOIN MTD t ON c.AGREE_ID = t.AGREE_ID
    LEFT JOIN BLOKIR b ON  c.ACCT_NO = b.ACCT_NO AND c.CTRL2=b.CTRL2
)
SELECT * FROM MSTR_TBL]
(Background on this error at: https://sqlalche.me/e/20/4xp6)
2025-01-13 13:57:33 - INFO - Processing Start
2025-01-13 13:57:33 - INFO - Running SQL Query
2025-01-13 14:13:38 - INFO - SQL Query Finished
2025-01-13 14:25:43 - INFO - Connected (version 2.0, client 6.6.2.451)
2025-01-13 14:25:44 - INFO - Authentication (password) successful!
2025-01-13 14:25:44 - INFO - [chan 0] Opened sftp connection (server version 3)
2025-01-13 14:26:04 - INFO - File uploaded successfully to /PDA/PNR Automation/Daily Funding/MF_20250110.csv
2025-01-13 14:26:04 - INFO - [chan 0] sftp session closed.
2025-01-13 14:26:05 - INFO - Processing Finished
